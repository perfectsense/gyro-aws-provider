aws::vpc vpc
    cidr-block: "10.0.0.0/16"
    provide-ipv6-cidr-block: true

    tags: {
        Name: "alb-example"
    }
end

aws::internet-gateway internet-gateway
    vpc: $(aws::vpc vpc)
end

aws::subnet subnet-us-east-2a
    vpc: $(aws::vpc vpc)
    availability-zone: 'us-east-2a'
    cidr-block: '10.0.0.0/24'
    ipv6-cidr-block: '2600:1f16:15d:b401::/64'

    tags: {
        Name: "alb example us-east-2a"
    }
end

aws::subnet subnet-us-east-2b
    vpc: $(aws::vpc vpc)
    availability-zone: 'us-east-2b'
    cidr-block: '10.0.1.0/24'
    ipv6-cidr-block: '2600:1f16:15d:b455::/64'

    tags: {
        Name: "alb example us-east-2b"
    }
end

aws::security-group security-group
    name: "alb example - allow web traffic"
    vpc: $(aws::vpc vpc)
    description: "Allow web traffic only"
end

aws::security-group-rules security-group-rules
    security-group: $(aws::security-group security-group)
    keep-default-egress-rules: true

    @for port, type -in [80, 'http', 443, 'https']
        ingress
            description: "allow inbound $(type) traffic"
            cidr-block: "0.0.0.0/0"
            protocol: "TCP"
            from-port: $(port)
            to-port: $(port)
        end
    @end
end

aws::security-group other-security-group
    name: "alb example - other - allow web traffic"
    vpc: $(aws::vpc vpc)
    description: "Allow web traffic only"
end

aws::security-group-rules other-security-group-rules
    security-group: $(aws::security-group other-security-group)
    keep-default-egress-rules: true

    @for port, type -in [80, 'http', 443, 'https']
        ingress
            description: "allow inbound $(type) traffic"
            cidr-block: "0.0.0.0/0"
            protocol: "TCP"
            from-port: $(port)
            to-port: $(port)
        end
    @end
end

aws::application-load-balancer alb-example
    name: "alb-example"
    ip-address-type: "dualstack"
    scheme: 'internet-facing'
    security-groups: [
        $(aws::security-group security-group),
        $(aws::security-group other-security-group)
    ]
    subnets: [
        $(aws::subnet subnet-us-east-2a),
        $(aws::subnet subnet-us-east-2b)
    ]
    tags: {
        Name: "alb-example"
    }
end
