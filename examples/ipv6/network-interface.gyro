aws::vpc vpc
    cidr-block: "10.0.0.0/16"
    provide-ipv6-cidr-block: true

    tags: {
        Name: "vpc-example"
    }
end

aws::subnet subnet-example-nic
    vpc: $(aws::vpc vpc)
    availability-zone: "us-east-2a"
    cidr-block: "10.0.1.0/24"
    map-public-ip-on-launch: true
    ipv6-cidr-block: '2600:1f16:9b1:9001::/64'

    tags: {
        Name: "network-interface-example"
    }
end

aws::security-group nic-security-group-example
    name: "$(project) $(environment) - Allow web traffic only"
    vpc: $(aws::vpc vpc)
    description: "Allow web traffic only"
end

aws::security-group-rules nic-security-group-example-rules
    security-group: $(aws::security-group nic-security-group-example)
    keep-default-egress-rules: true

    @for port, type -in [80, 'http', 443, 'https']
        ingress
            description: "allow inbound $(type) traffic, ipv4 only"
            cidr-block: "0.0.0.0/0"
            protocol: "TCP"
            from-port: $(port)
            to-port: $(port)
        end
    @end

    egress
        description: "allow outbound http traffic, ipv6 only"
        ipv6-cidr-block: "::/0"
        protocol: "TCP"
        from-port: 80
        to-port: 80
    end
end

aws::network-interface nic-example-with-secondary-ips
     description: "test-nic-with-secondary-ips"
     subnet: $(aws::subnet subnet-example-nic)

     ipv6-addresses: [
         "2600:1f16:9b1:9001:475e:3e1a:54c5:3d9f"
     ]

     tags: {
        Name: "nic-example-with-secondary-ip"
     }
end
