import ../init.gyro.state

aws::vpc "vpc"
    _configured-fields: ["cidr-block", "provide-ipv6-cidr-block", "tags", "Name"]
    cidr-block: "10.0.0.0/16"
    default-vpc: false
    enable-classic-link: false
    enable-classic-link-dns-support: false
    enable-dns-hostnames: true
    enable-dns-support: true
    instance-tenancy: "default"
    name: "instance example"
    owner-id: "test-owner-12345"
    provide-ipv6-cidr-block: true
    tags: {Name: "instance example"}
    vpc-id: "test-vpc-id-bf88350f59e866ed"
end
aws::subnet "subnet"
    _configured-fields: ["map-public-ip-on-launch", "cidr-block", "vpc-id", "availability-zone", "tags", "Name"]
    availability-zone: "us-east-2a"
    cidr-block: "10.0.0.0/16"
    map-public-ip-on-launch: true
    name: "instance example"
    subnet-id: "test-subnet-id-8f0ab046c6de5845"
    tags: {Name: "instance example"}
    vpc-id: "test-vpc-id-bf88350f59e866ed"
end
aws::security-group "security-group"
    _configured-fields: ["group-name", "description", "vpc-id", "keep-default-egress-rules", "tags", "Name"]
    description: "instance example"
    group-id: "test-group-id-899db8571d68224a"
    group-name: "instance-example"
    
    ingress
        _configured-fields: ["protocol", "cidr-blocks", "from-port", "to-port", "description"]
        cidr-blocks: ["0.0.0.0/0"]
        description: "allow inbound ssh traffic, ipv4 only"
        from-port: 22
        ipv6-cidr-blocks: []
        protocol: "tcp"
        to-port: 22
    end
    keep-default-egress-rules: true
    name: "instance example"
    owner-id: "test-owner-id-a9d06933876168d9"
    tags: {Name: "instance example"}
    vpc-id: "test-vpc-id-bf88350f59e866ed"
end
aws::instance "instance-example"
    _configured-fields: ["capacity-reservation", "key-name", "ami-name", "subnet-id", "shutdown-behavior", "ebs-optimized", "source-dest-check", "instance-type", "tags", "Name", "security-group-ids", "enable-ena-support", "disable-api-termination"]
    ami-name: "amzn-ami-hvm-2018.03.0.20181129-x86_64-gp2"
    capacity-reservation: "none"
    configure-hibernate-option: false
    core-count: 0
    disable-api-termination: false
    ebs-optimized: false
    enable-ena-support: true
    enable-monitoring: false
    instance-id: "test-instance-id-9d0a2c6f770473f1"
    instance-type: "t2.micro"
    key-name: "foo"
    name: "instance-example"
    security-group-ids: ["test-group-id-899db8571d68224a"]
    shutdown-behavior: "stop"
    source-dest-check: true
    subnet-id: "test-subnet-id-8f0ab046c6de5845"
    tags: {Name: "instance-example"}
    thread-per-core: 0
    user-data: ""
end
aws::route-table "route-table-example"
    _configured-fields: ["vpc-id", "subnet-ids", "tags", "Name"]
    name: "route-table-example"
    owner-id: "test-owner-id-b4d23ec143122d55"
    route-table-id: "test-route-table-id-88c1b44feda989a5"
    subnet-ids: ["test-subnet-id-8f0ab046c6de5845"]
    tags: {Name: "route-table-example"}
    vpc-id: "test-vpc-id-bf88350f59e866ed"
end
aws::route "route-example"
    _configured-fields: ["destination-cidr-block", "instance-id", "route-table-id"]
    destination-cidr-block: "0.0.0.0/0"
    instance-id: "test-instance-id-9d0a2c6f770473f1"
    route-table-id: "test-route-table-id-88c1b44feda989a5"
end