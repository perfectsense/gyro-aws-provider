import ../init as _

aws::vpc vpc
    cidr-block: "10.0.0.0/16"
    provide-ipv6-cidr-block: true

    tags: {
        Name: "instance example"
     }
end

aws::subnet subnet
    vpc-id: $(aws::vpc vpc | vpc-id)
    availability-zone: "us-east-2a"
    cidr-block: "10.0.0.0/16"
    map-public-ip-on-launch: true

    tags: {
        Name: "instance example"
    }
end

aws::security-group security-group
    group-name: "instance-example"
    vpc-id: $(aws::vpc vpc | vpc-id)
    description: "instance example"
    keep-default-egress-rules: true

    ingress
        description: "allow inbound ssh traffic, ipv4 only"
        cidr-blocks: ["0.0.0.0/0"]
        protocol: "TCP"
        from-port: 22
        to-port: 22
    end

    tags: {
        Name: "instance example"
    }
end

workflow 'replace-gateway' for-type: 'aws::instance'
    stage 'create-temp-gateway'
        create parser-error: 'workaround'
            aws::instance "$(NAME)-temp"
                _extends: $(PENDING)
            end
        end
    end

    stage 'swap-gateways'
        swap
            type: 'aws::instance'
            x: "$(NAME)"
            y: "$(NAME)-temp"
        end
    end
end

aws::instance instance-example
    ami-name: "amzn-ami-hvm-2018.03.0.20181129-x86_64-gp2"
    shutdown-behavior: "STOP"
    instance-type: "t2.micro"
    key-name: "bar"
    subnet-id: $(aws::subnet subnet | subnet-id)
    security-group-ids: [
        $(aws::security-group security-group| group-id)
    ]
    disable-api-termination: false
    enable-ena-support: true
    ebs-optimized: false
    source-dest-check: true

    tags: {
        Name: "instance-example"
    }

    capacity-reservation: "none"
end

aws::route-table route-table-example
    vpc-id: $(aws::vpc vpc | vpc-id)
    subnet-ids: [
        $(aws::subnet subnet | subnet-id)
    ]

    tags: {
        Name: "route-table-example"
    }
end

workflow 'replace-route' for-type: 'aws::route'
    stage 'delete-existing-route'
        confirm-diff: true

        delete
            type: 'aws::route'
            name: "$(NAME)"
        end
    end

    stage 'create-new-route'
        create parser-error: 'workaround'
            aws::route "$(NAME)"
                _extends: $(PENDING)
            end
        end
    end
end

aws::route route-example
    route-table-id: $(aws::route-table route-table-example | route-table-id)
    destination-cidr-block: "0.0.0.0/0"
    instance-id: $(aws::instance instance-example | instance-id)
end
