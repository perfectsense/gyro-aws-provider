aws::vpc vpc-launch-configuration-example
    cidr-block: "10.0.0.0/16"
    provide-ipv6-cidr-block: true

    tags: {
        Name: "vpc-launch-configuration-example"
         }
end

aws::subnet subnet
    vpc: $(aws::vpc vpc-launch-configuration-example)
    availability-zone: "us-east-2a"
    cidr-block: "10.0.0.0/16"
    map-public-ip-on-launch: true

    tags: {
        Name: "subnet instance example"
    }
end

aws::security-group security-group-launch-configuration-example-1
    group-name: "security-group-launch-configuration-example-1"
    vpc: $(aws::vpc vpc-launch-configuration-example)
    description: "security group launch-configuration example 1"
    keep-default-egress-rules: true

    ingress
        description: "allow inbound http traffic, ipv4 only"
        cidr-block: "0.0.0.0/0"
        protocol: "TCP"
        from-port: 22
        to-port: 22
    end

    egress
        description: "allow outbound http traffic, ipv6 only"
        ipv6-cidr-block: "::/0"
        protocol: "TCP"
        from-port: 22
        to-port: 22
    end

    tags: {
        Name: "security-group-launch-configuration-example-1"
    }
end

aws::security-group security-group-launch-configuration-example-2
    group-name: "security-group-launch-configuration-example-2"
    vpc: $(aws::vpc vpc-launch-configuration-example)
    description: "security group launch-configuration example 2"
    keep-default-egress-rules: true

    ingress
        description: "allow inbound http traffic, ipv4 only"
        cidr-block: "0.0.0.0/0"
        protocol: "TCP"
        from-port: 22
        to-port: 22
    end

    egress
        description: "allow outbound http traffic, ipv6 only"
        ipv6-cidr-block: "::/0"
        protocol: "TCP"
        from-port: 22
        to-port: 22
    end

    tags: {
        Name: "security-group-launch-configuration-example-2"
    }
end

aws::launch-configuration launch-configuration-1
    launch-configuration-name: "launch-configuration-gyro-1"
    ami-id: "ami-04328208f4f0cf1fe"
    instance-type: "t2.micro"
    key: "example"
    security-groups: [
        $(aws::security-group security-group-launch-configuration-example-1),
        $(aws::security-group security-group-launch-configuration-example-2)
    ]
    ebs-optimized: false
    enable-monitoring: true
    associate-public-ip: true
end

aws::instance instance-example
    ami-name: "amzn-ami-hvm-2018.03.0.20181129-x86_64-gp2"
    shutdown-behavior: "STOP"
    instance-type: "t2.micro"
    key: "example"
    subnet: $(aws::subnet subnet)
    security-groups: [
        $(aws::security-group security-group-launch-configuration-example-1),
        $(aws::security-group security-group-launch-configuration-example-2)
    ]
    disable-api-termination: false
    ebs-optimized: false
    source-dest-check: true

    tags: {
        Name: "instance-example"
    }

    capacity-reservation: "none"
end

aws::launch-configuration launch-configuration-2
    launch-configuration-name: "launch-configuration-gyro-2"
    instance: $(aws::instance instance-example)
    key: "example"
    security-groups: [
     $(aws::security-group security-group-launch-configuration-example-1),
     $(aws::security-group security-group-launch-configuration-example-2)
    ]
    ebs-optimized: false
    enable-monitoring: true
    associate-public-ip: true

    block-device-mapping
        device-name: "/dev/sdb"
        volume-size: 100
        auto-enable-io: false
    end
end
